.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AA-LOGPROF 8"
.TH AA-LOGPROF 8 "2020-12-07" "AppArmor 2.13.6" "AppArmor"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
aa\-logprof \- utility for updating AppArmor security profiles
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBaa-logprof [\f(BI\-d  /path/to/profiles\fB] [\f(BI\-f /path/to/logfile\fB] [\f(BI\-m <mark in logfile>\fB]\fR
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-d \-\-dir   /path/to/profiles\fR
.PP
.Vb 2
\&   Specifies where to look for the AppArmor security profile set.
\&   Defaults to /etc/apparmor.d.
.Ve
.PP
\&\fB\-f \-\-file   /path/to/logfile\fR
.PP
.Vb 6
\&    Specifies the location of logfile that contains AppArmor security events.
\&        Default locations are read from F</etc/apparmor/logprof.conf>.
\&        Typical defaults are:
\&                 /var/log/audit/audit.log
\&                 /var/log/syslog
\&                 /var/log/messages
.Ve
.PP
\&\fB \-m \-\-logmark    \*(L"mark\*(R"\fR
.PP
.Vb 3
\&   aa\-logprof will ignore all events in the system log before the
\&   specified mark is seen.  If the mark contains spaces, it must 
\&   be surrounded with quotes to work correctly.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBaa-logprof\fR is an interactive tool used to review AppArmor generated
messages and update AppArmor security profiles.
.PP
Running aa-logprof will scan the log file and if there are new AppArmor
events that are not covered by the existing profile set, the user will
be prompted with suggested modifications to augment the profile.
.PP
When aa-logprof exits profile changes are saved to disk.  If AppArmor is
running, the updated profiles are reloaded and if any processes that
generated AppArmor events are still running in the null-complain-profile,
those processes are set to run under their proper profiles.
.SS "Responding to AppArmor Events"
.IX Subsection "Responding to AppArmor Events"
\&\fBaa-logprof\fR will generate a list of suggested profile changes that
the user can choose from, or they can create their own, to modifiy the
permission set of the profile so that the generated access violation
will not re-occur.
.PP
The user is then presented with info about the access including profile,
path, old mode if there was a previous entry in the profile for this path,
new mode, the suggestion list, and given these options:
.PP
.Vb 1
\&   (A)llow, (D)eny, (I)gnore, (N)ew, (G)lob last piece, (Q)uit
.Ve
.PP
If the AppArmor profile was in complain mode when the event was generated,
the default for this option is (A)llow, otherwise, it's (D)eny.
.PP
The (D)eny option adds a \*(L"deny\*(R" rule to the AppArmor profile, which
silences logging.
.PP
The (I)gnore option allows user to ignore the event, without making any 
changes to the AppArmor profile.
.PP
The suggestion list is presented as a numbered list with includes
at the top, the literal path in the middle, and the suggested globs
at the bottom.  If any globs are being suggested, the shortest glob
is the selected option, otherwise, the literal path is selected.
Picking includes from the list must be done manually.
.PP
Hitting a numbered key will change the selected option to the
corresponding numbered entry in the list.
.PP
If the user selects (N)ew, they'll be prompted to enter their own globbed
entry to match the path.  If the user-entered glob does not match the
path for this event, they'll be informed and have the option to fix it.
.PP
If the user selects (G)lob last piece then, taking the currently selected
option, aa-logprof will remove the last path element and replace it with /*.
.PP
If the last path element already was /*, aa-logprof will go up a directory
level and replace it with /**.
.PP
This new globbed entry is then added to the suggestion list and marked
as the selected option.
.PP
So /usr/share/themes/foo/bar/baz.gif can be turned into
/usr/share/themes/** by hitting \*(L"g\*(R" three times.
.PP
If the user selects (A)llow, aa-logprof will take the current selection
and add it to the profile, deleting other entries in the profile that
are matched by the new entry.
.PP
Adding r access to /usr/share/themes/** would delete an entry for r
access to /usr/share/themes/foo/*.gif if it exists in the profile.
.PP
If (Q)uit is selected at this point, aa-logprof will ignore all new pending
accesses.
.PP
After all of the accesses have been handled, logrof will write all
updated profiles to the disk and reload them if AppArmor is running.
.SS "New Process (Execution) Events"
.IX Subsection "New Process (Execution) Events"
If there are unhandled x accesses generated by the \fIexecve\fR\|(2) of a
new process, aa-logprof will display the parent profile and the target
program that's being executed and prompt the user to select an execute
modifier. These modifiers will allow a choice for the target to: have it's
own profile (px), inherit the parent's profile (ix), run unconstrained
(ux), or deny access for the target. See \fIapparmor.d\fR\|(5) for details.
.PP
If there is a corresponding entry for the target in the qualifiers
section of /etc/apparmor/logprof.conf, the presented list will contain only the
allowed modes.
.PP
The default option for this question is selected using this logic\*(--
.PP
.Vb 6
\&  # if px mode is allowed and profile exists for the target
\&  #   px is default.
\&  # else if ix mode is allowed
\&  #   ix is default
\&  # else
\&  #   deny is default
.Ve
.PP
aa-logprof will never suggest \*(L"ux\*(R" as the default.
.SS "ChangeHat Events"
.IX Subsection "ChangeHat Events"
If unknown \fIaa_change_hat\fR\|(2) events are found, the user is prompted to add a new
hat, if the events should go into the default hat for this profile based
on the corresponding entry in the defaulthat section of logprof.conf,
or if the following events that run under that hat should be denied
altogether.
.SS "Capability Events"
.IX Subsection "Capability Events"
If there are capability accesses, the user is shown each capability
access and asked if the capability should be allowed, denied, or if the
user wants to quit. See \fIcapability\fR\|(7) for details.
.SH "BUGS"
.IX Header "BUGS"
If you find any bugs, please report them at
<https://bugs.launchpad.net/apparmor/+filebug>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIklogd\fR\|(8), \fIauditd\fR\|(8), \fIapparmor\fR\|(7), \fIapparmor.d\fR\|(5), \fIaa_change_hat\fR\|(2),
\&\fIlogprof.conf\fR\|(5), \fIaa\-genprof\fR\|(1), \fIaa\-enforce\fR\|(1), \fIaa\-complain\fR\|(1),
\&\fIaa\-disable\fR\|(1), and <https://wiki.apparmor.net>.
