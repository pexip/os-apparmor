.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AA-NOTIFY 8"
.TH AA-NOTIFY 8 "2018-12-21" "AppArmor 2.13.2" "AppArmor"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
aa\-notify \- display information about logged AppArmor messages.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBaa-notify\fR [option]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBaa-notify\fR will display a summary or provide desktop notifications
for AppArmor \s-1DENIED\s0 messages.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fBaa-notify\fR accepts the following arguments:
.IP "\-p, \-\-poll" 4
.IX Item "-p, --poll"
poll AppArmor logs and display desktop notifications. Can be used with '\-s'
option to display a summary on startup.
.ie n .IP "\-\-display $DISPLAY" 4
.el .IP "\-\-display \f(CW$DISPLAY\fR" 4
.IX Item "--display $DISPLAY"
set the \s-1DISPLAY\s0 environment variable to \f(CW$DISPLAY\fR
(might be needed if sudo resets \f(CW$DISPLAY\fR)
.IP "\-f \s-1FILE,\s0 \-\-file=FILE" 4
.IX Item "-f FILE, --file=FILE"
search \s-1FILE\s0 for AppArmor messages
.IP "\-l, \-\-since\-last" 4
.IX Item "-l, --since-last"
show summary since last login.
.IP "\-s \s-1NUM,\s0 \-\-since\-days=NUM" 4
.IX Item "-s NUM, --since-days=NUM"
show summary for last \s-1NUM\s0 of days.
.IP "\-u \s-1USER,\s0 \-\-user=USER" 4
.IX Item "-u USER, --user=USER"
user to drop privileges to when running privileged. When used with the \-p
option, this should be set to the user that will receive desktop notifications.
This has no effect when running under sudo.
.IP "\-w \s-1NUM,\s0 \-\-wait=NUM" 4
.IX Item "-w NUM, --wait=NUM"
wait \s-1NUM\s0 seconds before displaying notifications (for use with \-p)
.IP "\-v, \-\-verbose" 4
.IX Item "-v, --verbose"
show messages with summaries.
.IP "\-h, \-\-help" 4
.IX Item "-h, --help"
displays a short usage statement.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
System-wide configuration for \fBaa-notify\fR is done via
/etc/apparmor/notify.conf:
.PP
.Vb 2
\&  # set to \*(Aqyes\*(Aq to enable AppArmor DENIED notifications
\&  show_notifications="yes"
\&
\&  # only people in use_group can use aa\-notify
\&  use_group="admin"
\&
\&  # OPTIONAL \- custom notification message body
\&  message_body="This is a custom notification message."
\&
\&  # OPTIONAL \- custom notification message footer
\&  message_footer="For more information visit https://foo.com"
.Ve
.PP
Per-user configuration is done via \f(CW$XDG_CONFIG_HOME\fR/apparmor/notify.conf (or
the deprecated ~/.apparmor/notify.conf if it exists):
.PP
.Vb 2
\&  # set to \*(Aqyes\*(Aq to enable AppArmor DENIED notifications
\&  show_notifications="yes"
.Ve
.SH "BUGS"
.IX Header "BUGS"
\&\fBaa-notify\fR needs to be able to read the logfiles containing the
AppArmor \s-1DENIED\s0 messages.
.PP
If you find any additional bugs, please report them to Launchpad at
<https://bugs.launchpad.net/apparmor/+filebug>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIapparmor\fR\|(7)
