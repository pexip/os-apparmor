.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AA-GENPROF 8"
.TH AA-GENPROF 8 "2020-12-07" "AppArmor 2.13.6" "AppArmor"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
aa\-genprof \- profile generation utility for AppArmor
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBaa-genprof \f(BI<executable>\fB [\f(BI\-d /path/to/profiles\fB] [\f(BI\-f /path/to/logfile\fB]\fR
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-d \-\-dir  /path/to/profiles\fR
.PP
.Vb 2
\&   Specifies where to look for the AppArmor security profile set.
\&   Defaults to /etc/apparmor.d.
.Ve
.PP
\&\fB\-f \-\-file  /path/to/logfile\fR
.PP
.Vb 6
\&        Specifies the location of logfile.
\&        Default locations are read from F</etc/apparmor/logprof.conf>.
\&        Typical defaults are:
\&                 /var/log/audit/audit.log
\&                 /var/log/syslog
\&                 /var/log/messages
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
When running aa-genprof, you must specify a program to profile.  If the
specified program is not a fully-qualified path, aa-genprof will search \f(CW$PATH\fR
in order to find the program.
.PP
If a profile does not exist for the program, aa-genprof will create one using
\&\fIaa\-autodep\fR\|(1).
.PP
Genprof will then:
.PP
.Vb 1
\&   \- set the profile to complain mode 
\&
\&   \- write a mark to the system log
\&
\&   \- instruct the user to start the application to
\&     be profiled in another window and exercise its functionality
.Ve
.PP
It then presents the user with two options, (S)can system log for entries 
to add to profile and (F)inish.
.PP
If the user selects (S)can or hits return, aa-genprof will parse
the complain mode logs and iterate through generated violations
using \fIaa\-logprof\fR\|(1).
.PP
After the user finishes selecting profile entries based on violations 
that were detected during the program execution, aa-genprof will reload
the updated profiles in complain mode and again prompt the user for (S)can and 
(F)inish. This cycle can then be repeated as necessary until all application 
functionality has been exercised without generating access violations.
.PP
When the user eventually hits (F)inish, aa-genprof will set the main profile,
and any other profiles that were generated, into enforce mode and exit.
.SH "BUGS"
.IX Header "BUGS"
If you find any bugs, please report them at
<https://bugs.launchpad.net/apparmor/+filebug>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIapparmor\fR\|(7), \fIapparmor.d\fR\|(5), \fIaa\-enforce\fR\|(1), \fIaa\-complain\fR\|(1), \fIaa\-disable\fR\|(1),
\&\fIaa_change_hat\fR\|(2), \fIaa\-logprof\fR\|(1), \fIlogprof.conf\fR\|(5), and
<https://wiki.apparmor.net>.
