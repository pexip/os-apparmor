.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AA-STATUS 8"
.TH AA-STATUS 8 "2020-12-07" "AppArmor 2.13.6" "AppArmor"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
aa\-status \- display various information about the current AppArmor
policy.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBaa-status\fR [option]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBaa-status\fR will report various aspects of the current state of
AppArmor confinement. By default, it displays the same information as if
the \fI\-\-verbose\fR argument were given. A sample of what this looks like
is:
.PP
.Vb 8
\&  apparmor module is loaded.
\&  110 profiles are loaded.
\&  102 profiles are in enforce mode.
\&  8 profiles are in complain mode.
\&  Out of 129 processes running:
\&  13 processes have profiles defined.
\&  8 processes have profiles in enforce mode.
\&  5 processes have profiles in complain mode.
.Ve
.PP
Other argument options are provided to report individual aspects, to
support being used in scripts.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fBaa-status\fR accepts only one argument at a time out of:
.IP "\-\-enabled" 4
.IX Item "--enabled"
returns error code if AppArmor is not enabled.
.IP "\-\-profiled" 4
.IX Item "--profiled"
displays the number of loaded AppArmor policies.
.IP "\-\-enforced" 4
.IX Item "--enforced"
displays the number of loaded enforcing AppArmor policies.
.IP "\-\-complaining" 4
.IX Item "--complaining"
displays the number of loaded non-enforcing AppArmor policies.
.IP "\-\-verbose" 4
.IX Item "--verbose"
displays multiple data points about loaded AppArmor policy
set (the default action if no arguments are given).
.IP "\-\-json" 4
.IX Item "--json"
displays multiple data points about loaded AppArmor policy
set in a \s-1JSON\s0 format, fit for machine consumption.
.IP "\-\-pretty\-json" 4
.IX Item "--pretty-json"
same as \-\-json, formatted to be readable by humans as well
as by machines.
.IP "\-\-help" 4
.IX Item "--help"
displays a short usage statement.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
Upon exiting, \fBaa-status\fR will set its exit status to the
following values:
.IP "\fB0\fR" 4
.IX Item "0"
if apparmor is enabled and policy is loaded.
.IP "\fB1\fR" 4
.IX Item "1"
if apparmor is not enabled/loaded.
.IP "\fB2\fR" 4
.IX Item "2"
if apparmor is enabled but no policy is loaded.
.IP "\fB3\fR" 4
.IX Item "3"
if the apparmor control files aren't available under /sys/kernel/security/.
.IP "\fB4\fR" 4
.IX Item "4"
if the user running the script doesn't have enough privileges to read
the apparmor control files.
.SH "BUGS"
.IX Header "BUGS"
\&\fBaa-status\fR must be run as root to read the state of the loaded
policy from the apparmor module. It uses the /proc filesystem to determine
which processes are confined and so is susceptible to race conditions.
.PP
If you find any additional bugs, please report them at
<https://bugs.launchpad.net/apparmor/+filebug>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIapparmor\fR\|(7), \fIapparmor.d\fR\|(5), and
<https://wiki.apparmor.net>.
